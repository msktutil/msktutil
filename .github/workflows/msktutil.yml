name: msktutil

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:
    name: Build on ${{ matrix.cfg.container }} - ${{ matrix.cfg.cc-version }}
    runs-on: ubuntu-latest
    container: ${{ matrix.cfg.container }}
    strategy:
      fail-fast: false
      matrix:
        cfg:
          - { container: 'ubuntu:20.04', cc-version: gcc }
          - { container: 'ubuntu:20.04', cc-version: clang }
          - { container: 'ubuntu:22.04', cc-version: gcc }
          - { container: 'ubuntu:22.04', cc-version: clang }
          - { container: 'debian:stable', cc-version: gcc }
          - { container: 'debian:stable', cc-version: clang }
          - { container: 'debian:sid', cc-version: gcc }
          - { container: 'debian:sid', cc-version: clang }
          - { container: 'quay.io/centos/centos:stream8', cc-version: gcc }
          - { container: 'quay.io/centos/centos:stream8', cc-version: clang }
          - { container: 'quay.io/centos/centos:stream9', cc-version: gcc }
          - { container: 'quay.io/centos/centos:stream9', cc-version: clang }
          - { container: 'fedora:latest', cc-version: gcc }
          - { container: 'fedora:latest', cc-version: clang }
          - { container: 'registry.access.redhat.com/ubi9/ubi:latest', cc-version: gcc }
          - { container: 'registry.access.redhat.com/ubi9/ubi:latest', cc-version: clang }

    steps:
    - name: Install compiler ${{ matrix.cfg.cc-version }}
      shell: sh
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        case "${{ matrix.cfg.container }}" in
          ubuntu*|debian*)
            cat /etc/debian_version
            apt-get update -q -y
            apt-get install -q -y ${{ matrix.cfg.cc-version }}
            ${{ matrix.cfg.cc-version }} --version
            case "${{ matrix.cfg.cc-version }}" in
              gcc)
                apt-get install -q -y g++
                ;;
              clang)
                apt-get install -q -y build-essential
            esac
            ;;
          fedora*)
            cat /etc/fedora-release
            dnf -y update
            dnf -y install ${{ matrix.cfg.cc-version }}
            ${{ matrix.cfg.cc-version }} --version
            ;;
          */centos:7)
            cat /etc/centos-release
            rpm --import /etc/pki/rpm-gpg/RPM-GPG-KEY-CentOS-7
            yum -y update
            yum -y install ${{ matrix.cfg.cc-version }}
            ${{ matrix.cfg.cc-version }} --version
            ;;
          */centos:*)
            cat /etc/centos-release
            rpm --import /etc/pki/rpm-gpg/RPM-GPG-KEY-centosofficial
            dnf -y update
            dnf -y install ${{ matrix.cfg.cc-version }}
            ${{ matrix.cfg.cc-version }} --version
            ;;
          */ubi:*)
            cat /etc/redhat-release
            dnf -y install ${{ matrix.cfg.cc-version }}
            ${{ matrix.cfg.cc-version }} --version
        esac

    - name: Install msktutil dependencies ${{ matrix.cfg.cc-version }}
      shell: sh
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        case "${{ matrix.cfg.container }}" in
          ubuntu*|debian*)
            # basic packages
            apt-get install -q -y \
              autoconf libtool make pkg-config
            # install dependencies
            apt-get install -q -y \
              libldap2-dev libkrb5-dev libsasl2-dev
            ;;
          fedora*)
            # basic packages
            dnf -y install \
              autoconf automake gcc-c++ libtool make pkgconfig which redhat-rpm-config
            # install dependencies
            dnf -y install \
              cyrus-sasl-devel krb5-devel openldap-devel
            ;;
          */centos:7)
            # basic packages
            yum -y install \
              autoconf automake gcc-c++ libtool make pkgconfig which
            # install dependencies
            yum -y install \
              cyrus-sasl-devel krb5-devel openldap-devel
            ;;
          */centos:*|*/ubi:*)
            # basic packages
            dnf -y install \
              autoconf automake gcc-c++ libtool make pkgconfig which
            # install dependencies
            dnf -y install \
              cyrus-sasl-devel krb5-devel openldap-devel
            ;;
          esac

    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Build msktutil with ${{ matrix.cfg.cc-version }}
      shell: sh
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        case "${{ matrix.cfg.cc-version }}" in
          gcc)
            export CC=gcc
            export CXX=g++
            ;;
          clang)
            export CC=clang
            export CXX=clang++
            ;;
        esac
        ${CC} --version
        ./autogen.sh
        ./configure && make && ./msktutil --version
